services:
  postgres:
    container_name: postgres-sql
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./docker//init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - postgres
    restart: unless-stopped

  admin:
    container_name: admin
    build:
      context: ../next-commerce-admin/.
      dockerfile: ../next-commerce-admin/docker/Dockerfile
    depends_on:
      - backend
    links:
      - backend
    ports:
      - "3000:3000"  # Map port 3000 of the container to port 3000 on the host
    environment:
      - NODE_ENV=production  # Set the NODE_ENV environment variable
      #- NEXTAUTH_URL=http://admin:3000

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: